openapi: 3.0.0
info:
  title: Healthcheck
  description: API description for Healthcheck service.
  version: "1.0.0"
  contact:
    email: development@kvalitetitsit.dk
tags:
  - name: Healthcheck
    description: Healthcheck API

servers:
  - url: '{protocol}://{environment}:{port}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      environment:
        enum:
          - localhost # Docker-compose setup
        default: localhost # Development
      port:
        enum:
          - 8080
        default: 8080
paths:
  /v1/healthcheck:
    get:
      tags:
        - Healthcheck
      summary: Check health of services
      description: Check the health of Video API, STS, SMS service and short link service.
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthcheckResponse'

  /v1/provision-status/{uuid}:
    get:
      tags:
        - Healthcheck
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: The announcement for the given uuid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scheduling-info'
        '404':
          $ref: '#/components/responses/404'

components:
  responses:
    '204':
      description: 'No Content.'
    '404':
      description: "Not Found. The requested resource was not found."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'

  parameters:
    uuid:
      name: uuid
      in: path
      description: The uuid for the resource in question.
      required: true
      schema:
        type: string
        format: uuid
      example: 50edcf81-d36f-4246-a4af-168ba37fd57b


  schemas:
    healthcheckResponse:
      type: object
      required:
        - sts
        - video-api
        - short-link
        - sms
      properties:
        sts:
          description: STS status
          $ref: '#/components/schemas/status'
        video-api:
          description: Video API status
          $ref: '#/components/schemas/status'
        video-api-access-token:
          description: Create access token for VideoAPI.
          $ref: '#/components/schemas/status'
        short-link:
          description: Short link status
          $ref: '#/components/schemas/status'
        sms:
          description: SMS service status
          $ref: '#/components/schemas/status'

    status:
      type: object
      required:
        - status
        - response-time
      properties:
        status:
          description: True if service is healthy
          type: boolean
          example: true
        message:
          description: Additional message if service is not healthy.
          type: string
          example: STS returned 501.
        response-time:
          description: Response time from service.
          type: integer
          format: int64

    scheduling-info:
      type: object
      required:
        - provision_status
      properties:
        provision_status:
          description: Provision status
          type: string

    basic-error:
      type: object
      required:
        - error
        - path
        - status
        - status_text
        - timestamp
      properties:
        error:
          description: Error message.
          type: string
        path:
          description: Path
          type: string
        status:
          description: HTTP status code
          type: integer
        status_text:
          description: HTTP status text
          type: string
        timestamp:
          description: Time of error
          type: string
          format: date-time

