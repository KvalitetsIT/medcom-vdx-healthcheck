openapi: 3.0.0
info:
  title: Healthcheck
  description: API description for Healthcheck service.
  version: "1.0.0"
  contact:
    email: development@kvalitetitsit.dk
tags:
  - name: Healthcheck
    description: Healthcheck API

servers:
  - url: '{protocol}://{environment}:{port}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      environment:
        enum:
          - localhost # Docker-compose setup
        default: localhost # Development
      port:
        enum:
          - 8080
        default: 8080
paths:
  /v1/healthcheck:
    get:
      tags:
        - Healthcheck
      summary: Check health of services
      description: Check the health of Video API, STS, SMS service and short link service.
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthcheckResponse'

components:
  responses:
    '400':
      description: "Bad Request. This could be because: * One of the required parameters/properties are missing or is empty <br> * Length of input is exceeding maximum length <br> (See a possible detailed error message in the in the response.)"
    '401':
      description: "Unauthorized. This could be because: <br> * The calling system has not been properly authenticated."
    '403':
      description: "Forbidden. This could be because: <br> * The requested information does not belong the organisation of the user <br> * The calling user does not have the required roles"
  schemas:
    healthcheckResponse:
      type: object
      required:
        - sts
        - video-api
        - short-link
        - sms
      properties:
        sts:
          description: STS status
          $ref: '#/components/schemas/status'
        video-api:
          description: Video API status
          $ref: '#/components/schemas/status'
        video-api-access-token:
          description: Create access token for VideoAPI.
          $ref: '#/components/schemas/status'
        short-link:
          description: Short link status
          $ref: '#/components/schemas/status'
        sms:
          description: SMS service status
          $ref: '#/components/schemas/status'

    status:
      type: object
      required:
        - status
        - response-time
      properties:
        status:
          description: True if service is healthy
          type: boolean
          example: true
        message:
          description: Additional message if service is not healthy.
          type: string
          example: STS returned 501.
        response-time:
          description: Response time from service.
          type: integer
          format: int64

